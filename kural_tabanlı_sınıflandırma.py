# -*- coding: utf-8 -*-
"""Kural_Tabanlı_Sınıflandırma.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LxvINQLNOyF3qyNcb1PzwAPGBLAVbsXp
"""

import pandas as pd
##GÖREV1
###§ Soru 1: persona.csv dosyasını okutunuz ve veri seti ile ilgili genel bilgileri gösteriniz.

df = pd.read_csv('persona.csv')
print(df.info())

###§ Soru 2: Kaç unique SOURCE vardır? Frekansları nedir?
source_counts = df['SOURCE'].value_counts()

print("Unique SOURCE sayısı:", len(source_counts))
print("\nFrekansları:")
print(source_counts)

###Kaç unique PRICE vardır
unique_prices = df['PRICE'].nunique()

print("Unique PRICE sayısı:", unique_prices)

###§ Soru 4: Hangi PRICE'dan kaçar tane satış gerçekleşmiş?
price_counts = df['PRICE'].value_counts()
print("Satış sayıları:")
print(price_counts)

###§ Soru 5: Hangi ülkeden kaçar tane satış olmuş?
country_counts = df['COUNTRY'].value_counts()
print("Ülke bazında satış sayıları:")
print(country_counts)

###§ Soru 6: Ülkelere göre satışlardan toplam ne kadar kazanılmış?
revenue_by_country = df.groupby('COUNTRY')['PRICE'].sum()
print("Ülkelere göre toplam kazançlar:")
print(revenue_by_country)

###§ Soru 7: SOURCE türlerine göre satış sayıları nedir?
sales_by_source = df['SOURCE'].value_counts()
print("SOURCE türlerine göre satış sayıları:")
print(sales_by_source)

###§ Soru 8: Ülkelere göre PRICE ortalamaları nedir?
average_price_by_country = df.groupby('COUNTRY')['PRICE'].mean()
print("Ülkelere göre PRICE (fiyat) ortalamaları:")
print(average_price_by_country)

###§ Soru 9: SOURCE'lara göre PRICE ortalamaları nedir?
average_price_by_source = df.groupby('SOURCE')['PRICE'].mean()
print("SOURCE'lara göre PRICE (fiyat) ortalamaları:")
print(average_price_by_source)



###§ Soru 10: COUNTRY-SOURCE kırılımında PRICE ortalamaları nedir?
average_price_by_country_source = df.groupby(['COUNTRY', 'SOURCE'])['PRICE'].mean()
print("COUNTRY-SOURCE kırılımında PRICE (fiyat) ortalamaları:")
print(average_price_by_country_source)

###Görev 2: COUNTRY, SOURCE, SEX, AGE kırılımında ortalama kazançlar nedir
average_earnings_by_countrysourcesexage = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()

print("COUNTRY, SOURCE, SEX, AGE kırılımında ortalama kazançlar:")
print(average_earnings_by_countrysourcesexage)

###Görev 3: Çıktıyı PRICE’a göre sıralayınız.
###• Önceki sorudaki çıktıyı daha iyi görebilmek için sort_values metodunu azalan olacak şekilde PRICE’a göre uygulayınız.
###• Çıktıyı agg_df olarak kaydediniz.
average_earnings_by_countrysourcesexage = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()
agg_df = average_earnings_by_countrysourcesexage.sort_values(ascending=False)
print("COUNTRY, SOURCE, SEX, AGE kırılımında ortalama kazançlar (azalan sıralı):")
print(agg_df)

###Görev 4: Indekste yer alan isimleri değişken ismine çeviriniz.
###• Üçüncü sorunun çıktısında yer alan PRICE dışındaki tüm değişkenler index isimleridir. Bu isimleri değişken isimlerine çeviriniz.
average_earnings_by_countrysourcesexage = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()
agg_df = average_earnings_by_countrysourcesexage.sort_values(ascending=False)
agg_df = agg_df.reset_index()
print("COUNTRY, SOURCE, SEX, AGE kırılımında ortalama kazançlar (azalan sıralı):")
print(agg_df)

###Görev 5: Age değişkenini kategorik değişkene çeviriniz ve agg_df’e ekleyiniz.
###• Age sayısal değişkenini kategorik değişkene çeviriniz.
###• Aralıkları ikna edici şekilde oluşturunuz.
###• Örneğin: ‘0_18', ‘19_23', '24_30', '31_40', '41_70'
average_earnings_by_countrysourcesexage = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()
agg_df = average_earnings_by_countrysourcesexage.sort_values(ascending=False)
agg_df = agg_df.reset_index()
bins = [0, 18, 23, 30, 40, 70]
labels = ['0_18', '19_23', '24_30', '31_40', '41_70']
agg_df['AGE_GROUP'] = pd.cut(agg_df['AGE'], bins=bins, labels=labels, right=False)
agg_df.drop(columns=['AGE'], inplace=True)
print("COUNTRY, SOURCE, SEX, AGE_GROUP kırılımında ortalama kazançlar (azalan sıralı):")
print(agg_df)

###Görev 6: Yeni seviye tabanlı müşterileri (persona) tanımlayınız.
###• Yeni seviye tabanlı müşterileri (persona) tanımlayınız ve veri setine değişken olarak ekleyiniz.
###• Yeni eklenecek değişkenin adı: customers_level_based
###• Önceki soruda elde edeceğiniz çıktıdaki gözlemleri bir araya getirerek customers_level_based değişkenini oluşturmanız gerekmektedi
average_earnings_by_countrysourcesexage = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()
# "customers_level_based" adlı yeni değişkeni oluşturuyoruz
agg_df['customers_level_based'] = agg_df['COUNTRY'].astype(str) + '_' + agg_df['SOURCE'].astype(str) + '_' + agg_df['SEX'].astype(str) + '_' + agg_df['AGE_GROUP'].astype(str)
print("customers_level_based değişkeni oluşturuldu:")
print(agg_df)

###Görev 7:  Yeni müşterileri (personaları) segmentlereayırınız.•Yeni müşterileri (Örnek: USA_ANDROID_MALE_0_18) PRICE’agöre 4 segmenteayırınız.•SegmentleriSEGMENTisimlendirmesi ile değişken olarak agg_df’eekleyiniz.•Segmentleribetimleyiniz (Segmentleregöre groupbyyapıp pricemean, max, sum’larınıalınız).
segment_labels = ['SEGMENT_1', 'SEGMENT_2', 'SEGMENT_3', 'SEGMENT_4']
agg_df['SEGMENT'] = pd.qcut(agg_df['PRICE'], q=4, labels=segment_labels)
segment_stats = agg_df.groupby('SEGMENT')['PRICE'].agg(['mean', 'max', 'sum'])
print("Segmentlere göre istatistikler:")
print(segment_stats)

age_group_turkish_female_android = agg_df[(agg_df['AGE_GROUP'] == '31_40') & (agg_df['SOURCE'] == 'ANDROID') & (agg_df['COUNTRY'] == 'TUR') & (agg_df['SEX'] == 'FEMALE')]
if not age_group_turkish_female_android.empty:
    segment_turkish_female_android = age_group_turkish_female_android['SEGMENT'].iloc[0]
    average_income_turkish_female_android = age_group_turkish_female_android['PRICE'].mean()
    print("33 yaşında ANDROID kullanan bir Türk kadını segmente aittir:", segment_turkish_female_android)
    print("Ortalama gelir kazandırması beklenen miktar:", average_income_turkish_female_android)
else:
    print("33 yaşında ANDROID kullanan bir Türk kadını için uygun segment bulunamadı.")

# 35 yaşında IOS kullanan bir Fransız kadının segmentini ve ortalama gelir kazandırması beklenen miktarı tahmin edelim
age_group_french_female_ios = agg_df[(agg_df['AGE_GROUP'] == '31_40') & (agg_df['SOURCE'] == 'IOS') & (agg_df['COUNTRY'] == 'FRA') & (agg_df['SEX'] == 'FEMALE')]
if not age_group_french_female_ios.empty:
    segment_french_female_ios = age_group_french_female_ios['SEGMENT'].iloc[0]
    average_income_french_female_ios = age_group_french_female_ios['PRICE'].mean()
    print("35 yaşında IOS kullanan bir Fransız kadını segmente aittir:", segment_french_female_ios)
    print("Ortalama gelir kazandırması beklenen miktar:", average_income_french_female_ios)
else:
    print("35 yaşında IOS kullanan bir Fransız kadını için uygun segment bulunamadı.")